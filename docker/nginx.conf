# sudo apt-get install nginx-extras
# sudo apt-get install nginx-module-image-filter
load_module modules/ngx_http_image_filter_module.so;

proxy_cache_path /var/www/cache/uploads-thumb levels=1:2 keys_zone=uploads_thumb:10m max_size=50G;

server {
    listen 80;
    listen 443 ssl http2;
    server_name localhost;

    gzip on;
    gzip_min_length 1k;
    gzip_comp_level 9;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    root /usr/share/nginx/html;
    include /etc/nginx/mime.types;

    location / {

        # IP访问限制
        # allow 10.81.1.11;
        # deny all;

        proxy_set_header   Host $host;
        proxy_set_header   X-Forwarded-Host $host;
        proxy_set_header   X-Forwarded-Server $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "Upgrade";
        proxy_set_header   X-Forwarded-Proto $scheme;

        # 跨域代理
        # proxy_pass http://www.proxy.com;
        # add_header Access-Control-Allow-Origin *;
        # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        # add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        try_files $uri $uri/ /index.html;
    }

    # 图片防盗链
    location ~* \.(gif|jpg|jpeg|png|bmp|swf)$ {
        valid_referers none blocked 192.168.0.103;
        if ($invalid_referer){
            return 403;
        }
    }

    location /resize {
      expires 7d;

      add_header Cache-Control public;
      add_header X-Pownered "nginx_image_filter";
      add_header X-Cache-Status $upstream_cache_status;

      alias /tmp/nginx/resize;
      set $width 150;
      set $height 100;
      set $dimens "";

      if ($uri ~* "^/resize_(\d+)x(\d+)/(.*)" ) {
              set $width  $1;
              set $height $2;
              set $image_path $3;
              set $dimens "_$1x$2";
      }
      if ($uri ~* "^/resize/(.*)" ) {
              set $image_path $1;
      }
      set $image_uri image-resize/$image_path?width=$width&height=$height;

      if (!-f $request_filename) {
              proxy_pass http://127.0.0.1:8080/$image_uri;
              break;
      }

      # proxy_store on;
      # proxy_store_access   user:rw  group:rw  all:r;
      # proxy_temp_path      /tmp/nginx/resize$dimens/$image_path;
      # proxy_set_header     Host $host;

      proxy_cache uploads_thumb;
      proxy_cache_bypass $http_pragma;
      proxy_cache_key "$host$document_uri";
      proxy_cache_valid 200 7d;
      proxy_cache_use_stale error timeout invalid_header updating;
      proxy_cache_revalidate on;

      proxy_intercept_errors on;
      error_page   415 = /assets/415.png;
      error_page   404 = /assets/404.png;
    }

    # location ~* /img/(.+)!(large|lg|md|sm|xs)$ {
    #   set $filename /uploads/$1;

    #   if (-f $filename) {
    #     break;
    #   }

    #   set $img_version $2;
    #   set $img_type resize;
    #   set $arg_width    -;
    #   set $arg_height    -;
    #   if ($img_version = 'large') {
    #     set $img_type resize;
    #     set $arg_width    1920;
    #   }
    #   if ($img_version = 'lg') {
    #     set $img_type crop;
    #     set $arg_width    192;
    #     set $arg_height    192;
    #   }
    #   if ($img_version = 'md') {
    #     set $img_type crop;
    #     set $arg_width    96;
    #     set $arg_height    96;
    #   }
    #   if ($img_version = 'sm') {
    #     set $img_type crop;
    #     set $arg_width    48;
    #     set $arg_height    48;
    #   }
    #   if ($img_version = 'xs') {
    #     set $img_type crop;
    #     set $arg_width    32;
    #     set $arg_height    32;
    #   }
    #   rewrite ^ /image-$img_type;
    # }

    location /image-resize {
        rewrite /(image-resize)/(.*) /$2 break;
        image_filter resize $arg_width $arg_height;
        image_filter_jpeg_quality 75;
        image_filter_buffer 20M;
        image_filter_interlace  on;
    }

    location /image-crop {
        rewrite /(image-resize)/(.*) /$2 break;
        image_filter crop $arg_width $arg_height;
        image_filter_jpeg_quality 75;
        image_filter_buffer 20M;
        image_filter_interlace  on;
    }

    # 主动清理缓存
    location /purge(/.*) {
        allow 127.0.0.1;
        deny all;
        proxy_cache_purge ngx_cache_one $host$1;
    }
}
